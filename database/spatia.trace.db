2016-09-05 20:46:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Schema "SPATIA" not found; SQL statement:
UPDATE SPATIA.TERMS a SET a.tfidf=(SELECT b.idf*a.tf FROM SPATIA.IDF b WHERE a.term=b.term) [90079-191]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.getSchema(Parser.java:666)
	at org.h2.command.Parser.getSchema(Parser.java:673)
	at org.h2.command.Parser.readTableOrView(Parser.java:5332)
	at org.h2.command.Parser.readTableOrView(Parser.java:5326)
	at org.h2.command.Parser.readSimpleTableFilter(Parser.java:775)
	at org.h2.command.Parser.parseUpdate(Parser.java:718)
	at org.h2.command.Parser.parsePrepared(Parser.java:465)
	at org.h2.command.Parser.parse(Parser.java:315)
	at org.h2.command.Parser.parse(Parser.java:287)
	at org.h2.command.Parser.prepareCommand(Parser.java:252)
	at org.h2.engine.Session.prepareLocal(Session.java:560)
	at org.h2.engine.Session.prepareCommand(Session.java:501)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1188)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:73)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:276)
	at model.ModelOperations.<init>(ModelOperations.java:31)
	at model.ModelDatabase.createOperations(ModelDatabase.java:59)
	at model.ModelDatabase.<init>(ModelDatabase.java:33)
	at model.ModelDatabase.instance(ModelDatabase.java:46)
	at Main.start(Main.java:22)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$162(LauncherImpl.java:863)
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$175(PlatformImpl.java:326)
	at com.sun.javafx.application.PlatformImpl.lambda$null$173(PlatformImpl.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$174(PlatformImpl.java:294)
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)
	at java.lang.Thread.run(Thread.java:745)
2016-09-05 20:49:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Schema "SPATIA" already exists; SQL statement:
CREATE SCHEMA SPATIA [90078-191]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateSchema.update(CreateSchema.java:48)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at model.ModelDatabase.createSchema(ModelDatabase.java:70)
	at model.ModelDatabase.<init>(ModelDatabase.java:30)
	at model.ModelDatabase.instance(ModelDatabase.java:46)
	at Main.start(Main.java:22)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$162(LauncherImpl.java:863)
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$175(PlatformImpl.java:326)
	at com.sun.javafx.application.PlatformImpl.lambda$null$173(PlatformImpl.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$174(PlatformImpl.java:294)
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)
	at java.lang.Thread.run(Thread.java:745)
2016-09-05 20:49:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "DOCUMENT" already exists; SQL statement:
CREATE TABLE SPATIA.DOCUMENT(idDoc INTEGER NOT NULL,title VARCHAR NOT NULL,journal VARCHAR NOT NULL,libraryNotes VARCHAR NOT NULL,authors VARCHAR,abstractText VARCHAR,keyWords VARCHAR,classification VARCHAR,citations VARCHAR,PRIMARY KEY (idDoc)) [42101-191]
2016-09-05 20:49:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TERMS" already exists; SQL statement:
CREATE TABLE SPATIA.TERMS(idDoc INTEGER NOT NULL,term VARCHAR NOT NULL,tf INTEGER NOT NULL,tfidf DOUBLE,FOREIGN KEY(idDoc) REFERENCES DOCUMENT(idDoc) ON DELETE CASCADE,PRIMARY KEY (idDoc,term)) [42101-191]
2016-09-05 20:49:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IDF" already exists; SQL statement:
CREATE TABLE SPATIA.IDF(term VARCHAR NOT NULL,numDocs INTEGER NOT NULL,idf DOUBLE NOT NULL,PRIMARY KEY (term)) [42101-191]
2016-09-05 20:50:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Schema "SPATIA" already exists; SQL statement:
CREATE SCHEMA SPATIA [90078-191]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateSchema.update(CreateSchema.java:48)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at model.ModelDatabase.createSchema(ModelDatabase.java:70)
	at model.ModelDatabase.<init>(ModelDatabase.java:30)
	at model.ModelDatabase.instance(ModelDatabase.java:46)
	at Main.start(Main.java:22)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$162(LauncherImpl.java:863)
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$175(PlatformImpl.java:326)
	at com.sun.javafx.application.PlatformImpl.lambda$null$173(PlatformImpl.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$174(PlatformImpl.java:294)
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)
	at java.lang.Thread.run(Thread.java:745)
2016-09-05 20:50:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "DOCUMENT" already exists; SQL statement:
CREATE TABLE SPATIA.DOCUMENT(idDoc INTEGER NOT NULL,title VARCHAR NOT NULL,journal VARCHAR NOT NULL,libraryNotes VARCHAR NOT NULL,authors VARCHAR,abstractText VARCHAR,keyWords VARCHAR,classification VARCHAR,citations VARCHAR,PRIMARY KEY (idDoc)) [42101-191]
2016-09-05 20:50:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TERMS" already exists; SQL statement:
CREATE TABLE SPATIA.TERMS(idDoc INTEGER NOT NULL,term VARCHAR NOT NULL,tf INTEGER NOT NULL,tfidf DOUBLE,FOREIGN KEY(idDoc) REFERENCES DOCUMENT(idDoc) ON DELETE CASCADE,PRIMARY KEY (idDoc,term)) [42101-191]
2016-09-05 20:50:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IDF" already exists; SQL statement:
CREATE TABLE SPATIA.IDF(term VARCHAR NOT NULL,numDocs INTEGER NOT NULL,idf DOUBLE NOT NULL,PRIMARY KEY (term)) [42101-191]
2016-09-05 20:50:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Schema "SPATIA" already exists; SQL statement:
CREATE SCHEMA SPATIA [90078-191]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateSchema.update(CreateSchema.java:48)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at model.ModelDatabase.createSchema(ModelDatabase.java:70)
	at model.ModelDatabase.<init>(ModelDatabase.java:30)
	at model.ModelDatabase.instance(ModelDatabase.java:46)
	at Main.start(Main.java:22)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$162(LauncherImpl.java:863)
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$175(PlatformImpl.java:326)
	at com.sun.javafx.application.PlatformImpl.lambda$null$173(PlatformImpl.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$174(PlatformImpl.java:294)
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)
	at java.lang.Thread.run(Thread.java:745)
2016-09-05 20:50:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "DOCUMENT" already exists; SQL statement:
CREATE TABLE SPATIA.DOCUMENT(idDoc INTEGER NOT NULL,title VARCHAR NOT NULL,journal VARCHAR NOT NULL,libraryNotes VARCHAR NOT NULL,authors VARCHAR,abstractText VARCHAR,keyWords VARCHAR,classification VARCHAR,citations VARCHAR,PRIMARY KEY (idDoc)) [42101-191]
2016-09-05 20:50:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TERMS" already exists; SQL statement:
CREATE TABLE SPATIA.TERMS(idDoc INTEGER NOT NULL,term VARCHAR NOT NULL,tf INTEGER NOT NULL,tfidf DOUBLE,FOREIGN KEY(idDoc) REFERENCES DOCUMENT(idDoc) ON DELETE CASCADE,PRIMARY KEY (idDoc,term)) [42101-191]
2016-09-05 20:50:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IDF" already exists; SQL statement:
CREATE TABLE SPATIA.IDF(term VARCHAR NOT NULL,numDocs INTEGER NOT NULL,idf DOUBLE NOT NULL,PRIMARY KEY (term)) [42101-191]
2016-09-05 20:53:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Schema "SPATIA" already exists; SQL statement:
CREATE SCHEMA SPATIA [90078-191]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateSchema.update(CreateSchema.java:48)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at model.ModelDatabase.createSchema(ModelDatabase.java:70)
	at model.ModelDatabase.<init>(ModelDatabase.java:30)
	at model.ModelDatabase.instance(ModelDatabase.java:46)
	at Main.start(Main.java:22)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$162(LauncherImpl.java:863)
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$175(PlatformImpl.java:326)
	at com.sun.javafx.application.PlatformImpl.lambda$null$173(PlatformImpl.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$174(PlatformImpl.java:294)
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)
	at java.lang.Thread.run(Thread.java:745)
2016-09-05 20:53:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "DOCUMENT" already exists; SQL statement:
CREATE TABLE SPATIA.DOCUMENT(idDoc INTEGER NOT NULL,title VARCHAR NOT NULL,journal VARCHAR NOT NULL,libraryNotes VARCHAR NOT NULL,authors VARCHAR,abstractText VARCHAR,keyWords VARCHAR,classification VARCHAR,citations VARCHAR,PRIMARY KEY (idDoc)) [42101-191]
2016-09-05 20:53:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TERMS" already exists; SQL statement:
CREATE TABLE SPATIA.TERMS(idDoc INTEGER NOT NULL,term VARCHAR NOT NULL,tf INTEGER NOT NULL,tfidf DOUBLE,FOREIGN KEY(idDoc) REFERENCES DOCUMENT(idDoc) ON DELETE CASCADE,PRIMARY KEY (idDoc,term)) [42101-191]
2016-09-05 20:53:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IDF" already exists; SQL statement:
CREATE TABLE SPATIA.IDF(term VARCHAR NOT NULL,numDocs INTEGER NOT NULL,idf DOUBLE NOT NULL,PRIMARY KEY (term)) [42101-191]
2016-09-05 20:53:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Schema "SPATIA" already exists; SQL statement:
CREATE SCHEMA SPATIA [90078-191]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateSchema.update(CreateSchema.java:48)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at model.ModelDatabase.createSchema(ModelDatabase.java:70)
	at model.ModelDatabase.<init>(ModelDatabase.java:30)
	at model.ModelDatabase.instance(ModelDatabase.java:46)
	at Main.start(Main.java:22)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$162(LauncherImpl.java:863)
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$175(PlatformImpl.java:326)
	at com.sun.javafx.application.PlatformImpl.lambda$null$173(PlatformImpl.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$174(PlatformImpl.java:294)
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)
	at java.lang.Thread.run(Thread.java:745)
2016-09-05 20:53:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "DOCUMENT" already exists; SQL statement:
CREATE TABLE SPATIA.DOCUMENT(idDoc INTEGER NOT NULL,title VARCHAR NOT NULL,journal VARCHAR NOT NULL,libraryNotes VARCHAR NOT NULL,authors VARCHAR,abstractText VARCHAR,keyWords VARCHAR,classification VARCHAR,citations VARCHAR,PRIMARY KEY (idDoc)) [42101-191]
2016-09-05 20:53:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TERMS" already exists; SQL statement:
CREATE TABLE SPATIA.TERMS(idDoc INTEGER NOT NULL,term VARCHAR NOT NULL,tf INTEGER NOT NULL,tfidf DOUBLE,FOREIGN KEY(idDoc) REFERENCES DOCUMENT(idDoc) ON DELETE CASCADE,PRIMARY KEY (idDoc,term)) [42101-191]
2016-09-05 20:53:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IDF" already exists; SQL statement:
CREATE TABLE SPATIA.IDF(term VARCHAR NOT NULL,numDocs INTEGER NOT NULL,idf DOUBLE NOT NULL,PRIMARY KEY (term)) [42101-191]
2016-09-05 20:54:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Schema "SPATIA" already exists; SQL statement:
CREATE SCHEMA SPATIA [90078-191]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateSchema.update(CreateSchema.java:48)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at model.ModelDatabase.createSchema(ModelDatabase.java:70)
	at model.ModelDatabase.<init>(ModelDatabase.java:30)
	at model.ModelDatabase.instance(ModelDatabase.java:46)
	at Main.start(Main.java:22)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$162(LauncherImpl.java:863)
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$175(PlatformImpl.java:326)
	at com.sun.javafx.application.PlatformImpl.lambda$null$173(PlatformImpl.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$174(PlatformImpl.java:294)
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)
	at java.lang.Thread.run(Thread.java:745)
2016-09-05 20:54:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "DOCUMENT" already exists; SQL statement:
CREATE TABLE SPATIA.DOCUMENT(idDoc INTEGER NOT NULL,title VARCHAR NOT NULL,journal VARCHAR NOT NULL,libraryNotes VARCHAR NOT NULL,authors VARCHAR,abstractText VARCHAR,keyWords VARCHAR,classification VARCHAR,citations VARCHAR,PRIMARY KEY (idDoc)) [42101-191]
2016-09-05 20:54:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TERMS" already exists; SQL statement:
CREATE TABLE SPATIA.TERMS(idDoc INTEGER NOT NULL,term VARCHAR NOT NULL,tf INTEGER NOT NULL,tfidf DOUBLE,FOREIGN KEY(idDoc) REFERENCES DOCUMENT(idDoc) ON DELETE CASCADE,PRIMARY KEY (idDoc,term)) [42101-191]
2016-09-05 20:54:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IDF" already exists; SQL statement:
CREATE TABLE SPATIA.IDF(term VARCHAR NOT NULL,numDocs INTEGER NOT NULL,idf DOUBLE NOT NULL,PRIMARY KEY (term)) [42101-191]
2016-09-05 20:54:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Schema "SPATIA" already exists; SQL statement:
CREATE SCHEMA SPATIA [90078-191]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateSchema.update(CreateSchema.java:48)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at model.ModelDatabase.createSchema(ModelDatabase.java:70)
	at model.ModelDatabase.<init>(ModelDatabase.java:30)
	at model.ModelDatabase.instance(ModelDatabase.java:46)
	at Main.start(Main.java:22)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$162(LauncherImpl.java:863)
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$175(PlatformImpl.java:326)
	at com.sun.javafx.application.PlatformImpl.lambda$null$173(PlatformImpl.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$174(PlatformImpl.java:294)
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)
	at java.lang.Thread.run(Thread.java:745)
2016-09-05 20:54:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "DOCUMENT" already exists; SQL statement:
CREATE TABLE SPATIA.DOCUMENT(idDoc INTEGER NOT NULL,title VARCHAR NOT NULL,journal VARCHAR NOT NULL,libraryNotes VARCHAR NOT NULL,authors VARCHAR,abstractText VARCHAR,keyWords VARCHAR,classification VARCHAR,citations VARCHAR,PRIMARY KEY (idDoc)) [42101-191]
2016-09-05 20:54:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TERMS" already exists; SQL statement:
CREATE TABLE SPATIA.TERMS(idDoc INTEGER NOT NULL,term VARCHAR NOT NULL,tf INTEGER NOT NULL,tfidf DOUBLE,FOREIGN KEY(idDoc) REFERENCES DOCUMENT(idDoc) ON DELETE CASCADE,PRIMARY KEY (idDoc,term)) [42101-191]
2016-09-05 20:54:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IDF" already exists; SQL statement:
CREATE TABLE SPATIA.IDF(term VARCHAR NOT NULL,numDocs INTEGER NOT NULL,idf DOUBLE NOT NULL,PRIMARY KEY (term)) [42101-191]
2016-09-05 20:55:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Schema "SPATIA" already exists; SQL statement:
CREATE SCHEMA SPATIA [90078-191]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateSchema.update(CreateSchema.java:48)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at model.ModelDatabase.createSchema(ModelDatabase.java:70)
	at model.ModelDatabase.<init>(ModelDatabase.java:30)
	at model.ModelDatabase.instance(ModelDatabase.java:46)
	at Main.start(Main.java:22)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$162(LauncherImpl.java:863)
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$175(PlatformImpl.java:326)
	at com.sun.javafx.application.PlatformImpl.lambda$null$173(PlatformImpl.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$174(PlatformImpl.java:294)
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)
	at java.lang.Thread.run(Thread.java:745)
2016-09-05 20:55:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "DOCUMENT" already exists; SQL statement:
CREATE TABLE SPATIA.DOCUMENT(idDoc INTEGER NOT NULL,title VARCHAR NOT NULL,journal VARCHAR NOT NULL,libraryNotes VARCHAR NOT NULL,authors VARCHAR,abstractText VARCHAR,keyWords VARCHAR,classification VARCHAR,citations VARCHAR,PRIMARY KEY (idDoc)) [42101-191]
2016-09-05 20:55:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TERMS" already exists; SQL statement:
CREATE TABLE SPATIA.TERMS(idDoc INTEGER NOT NULL,term VARCHAR NOT NULL,tf INTEGER NOT NULL,tfidf DOUBLE,FOREIGN KEY(idDoc) REFERENCES DOCUMENT(idDoc) ON DELETE CASCADE,PRIMARY KEY (idDoc,term)) [42101-191]
2016-09-05 20:55:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IDF" already exists; SQL statement:
CREATE TABLE SPATIA.IDF(term VARCHAR NOT NULL,numDocs INTEGER NOT NULL,idf DOUBLE NOT NULL,PRIMARY KEY (term)) [42101-191]
2016-09-05 20:56:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Schema "SPATIA" already exists; SQL statement:
CREATE SCHEMA SPATIA [90078-191]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateSchema.update(CreateSchema.java:48)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at model.ModelDatabase.createSchema(ModelDatabase.java:70)
	at model.ModelDatabase.<init>(ModelDatabase.java:30)
	at model.ModelDatabase.instance(ModelDatabase.java:46)
	at Main.start(Main.java:22)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$162(LauncherImpl.java:863)
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$175(PlatformImpl.java:326)
	at com.sun.javafx.application.PlatformImpl.lambda$null$173(PlatformImpl.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$174(PlatformImpl.java:294)
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)
	at java.lang.Thread.run(Thread.java:745)
2016-09-05 20:56:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "DOCUMENT" already exists; SQL statement:
CREATE TABLE SPATIA.DOCUMENT(idDoc INTEGER NOT NULL,title VARCHAR NOT NULL,journal VARCHAR NOT NULL,libraryNotes VARCHAR NOT NULL,authors VARCHAR,abstractText VARCHAR,keyWords VARCHAR,classification VARCHAR,citations VARCHAR,PRIMARY KEY (idDoc)) [42101-191]
2016-09-05 20:56:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TERMS" already exists; SQL statement:
CREATE TABLE SPATIA.TERMS(idDoc INTEGER NOT NULL,term VARCHAR NOT NULL,tf INTEGER NOT NULL,tfidf DOUBLE,FOREIGN KEY(idDoc) REFERENCES DOCUMENT(idDoc) ON DELETE CASCADE,PRIMARY KEY (idDoc,term)) [42101-191]
2016-09-05 20:56:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IDF" already exists; SQL statement:
CREATE TABLE SPATIA.IDF(term VARCHAR NOT NULL,numDocs INTEGER NOT NULL,idf DOUBLE NOT NULL,PRIMARY KEY (term)) [42101-191]
2016-09-05 20:56:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Schema "SPATIA" already exists; SQL statement:
CREATE SCHEMA SPATIA [90078-191]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateSchema.update(CreateSchema.java:48)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at model.ModelDatabase.createSchema(ModelDatabase.java:70)
	at model.ModelDatabase.<init>(ModelDatabase.java:30)
	at model.ModelDatabase.instance(ModelDatabase.java:46)
	at Main.start(Main.java:22)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$162(LauncherImpl.java:863)
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$175(PlatformImpl.java:326)
	at com.sun.javafx.application.PlatformImpl.lambda$null$173(PlatformImpl.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$174(PlatformImpl.java:294)
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)
	at java.lang.Thread.run(Thread.java:745)
2016-09-05 20:56:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "DOCUMENT" already exists; SQL statement:
CREATE TABLE SPATIA.DOCUMENT(idDoc INTEGER NOT NULL,title VARCHAR NOT NULL,journal VARCHAR NOT NULL,libraryNotes VARCHAR NOT NULL,authors VARCHAR,abstractText VARCHAR,keyWords VARCHAR,classification VARCHAR,citations VARCHAR,PRIMARY KEY (idDoc)) [42101-191]
2016-09-05 20:56:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TERMS" already exists; SQL statement:
CREATE TABLE SPATIA.TERMS(idDoc INTEGER NOT NULL,term VARCHAR NOT NULL,tf INTEGER NOT NULL,tfidf DOUBLE,FOREIGN KEY(idDoc) REFERENCES DOCUMENT(idDoc) ON DELETE CASCADE,PRIMARY KEY (idDoc,term)) [42101-191]
2016-09-05 20:56:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IDF" already exists; SQL statement:
CREATE TABLE SPATIA.IDF(term VARCHAR NOT NULL,numDocs INTEGER NOT NULL,idf DOUBLE NOT NULL,PRIMARY KEY (term)) [42101-191]
2016-09-05 20:58:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Schema "SPATIA" already exists; SQL statement:
CREATE SCHEMA SPATIA [90078-191]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateSchema.update(CreateSchema.java:48)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at model.ModelDatabase.createSchema(ModelDatabase.java:70)
	at model.ModelDatabase.<init>(ModelDatabase.java:30)
	at model.ModelDatabase.instance(ModelDatabase.java:46)
	at Main.start(Main.java:22)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$162(LauncherImpl.java:863)
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$175(PlatformImpl.java:326)
	at com.sun.javafx.application.PlatformImpl.lambda$null$173(PlatformImpl.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$174(PlatformImpl.java:294)
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)
	at java.lang.Thread.run(Thread.java:745)
2016-09-05 20:58:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "DOCUMENT" already exists; SQL statement:
CREATE TABLE SPATIA.DOCUMENT(idDoc INTEGER NOT NULL,title VARCHAR NOT NULL,journal VARCHAR NOT NULL,libraryNotes VARCHAR NOT NULL,authors VARCHAR,abstractText VARCHAR,keyWords VARCHAR,classification VARCHAR,citations VARCHAR,PRIMARY KEY (idDoc)) [42101-191]
2016-09-05 20:58:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TERMS" already exists; SQL statement:
CREATE TABLE SPATIA.TERMS(idDoc INTEGER NOT NULL,term VARCHAR NOT NULL,tf INTEGER NOT NULL,tfidf DOUBLE,FOREIGN KEY(idDoc) REFERENCES DOCUMENT(idDoc) ON DELETE CASCADE,PRIMARY KEY (idDoc,term)) [42101-191]
2016-09-05 20:58:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IDF" already exists; SQL statement:
CREATE TABLE SPATIA.IDF(term VARCHAR NOT NULL,numDocs INTEGER NOT NULL,idf DOUBLE NOT NULL,PRIMARY KEY (term)) [42101-191]
2016-09-05 20:58:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Schema "SPATIA" already exists; SQL statement:
CREATE SCHEMA SPATIA [90078-191]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateSchema.update(CreateSchema.java:48)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at model.ModelDatabase.createSchema(ModelDatabase.java:70)
	at model.ModelDatabase.<init>(ModelDatabase.java:30)
	at model.ModelDatabase.instance(ModelDatabase.java:46)
	at Main.start(Main.java:22)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$162(LauncherImpl.java:863)
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$175(PlatformImpl.java:326)
	at com.sun.javafx.application.PlatformImpl.lambda$null$173(PlatformImpl.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$174(PlatformImpl.java:294)
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)
	at java.lang.Thread.run(Thread.java:745)
2016-09-05 20:58:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "DOCUMENT" already exists; SQL statement:
CREATE TABLE SPATIA.DOCUMENT(idDoc INTEGER NOT NULL,title VARCHAR NOT NULL,journal VARCHAR NOT NULL,libraryNotes VARCHAR NOT NULL,authors VARCHAR,abstractText VARCHAR,keyWords VARCHAR,classification VARCHAR,citations VARCHAR,PRIMARY KEY (idDoc)) [42101-191]
2016-09-05 20:58:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TERMS" already exists; SQL statement:
CREATE TABLE SPATIA.TERMS(idDoc INTEGER NOT NULL,term VARCHAR NOT NULL,tf INTEGER NOT NULL,tfidf DOUBLE,FOREIGN KEY(idDoc) REFERENCES DOCUMENT(idDoc) ON DELETE CASCADE,PRIMARY KEY (idDoc,term)) [42101-191]
2016-09-05 20:58:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IDF" already exists; SQL statement:
CREATE TABLE SPATIA.IDF(term VARCHAR NOT NULL,numDocs INTEGER NOT NULL,idf DOUBLE NOT NULL,PRIMARY KEY (term)) [42101-191]
2016-09-05 20:59:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Schema "SPATIA" already exists; SQL statement:
CREATE SCHEMA SPATIA [90078-191]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateSchema.update(CreateSchema.java:48)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at model.ModelDatabase.createSchema(ModelDatabase.java:70)
	at model.ModelDatabase.<init>(ModelDatabase.java:30)
	at model.ModelDatabase.instance(ModelDatabase.java:46)
	at Main.start(Main.java:22)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$162(LauncherImpl.java:863)
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$175(PlatformImpl.java:326)
	at com.sun.javafx.application.PlatformImpl.lambda$null$173(PlatformImpl.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$174(PlatformImpl.java:294)
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)
	at java.lang.Thread.run(Thread.java:745)
2016-09-05 20:59:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "DOCUMENT" already exists; SQL statement:
CREATE TABLE SPATIA.DOCUMENT(idDoc INTEGER NOT NULL,title VARCHAR NOT NULL,journal VARCHAR NOT NULL,libraryNotes VARCHAR NOT NULL,authors VARCHAR,abstractText VARCHAR,keyWords VARCHAR,classification VARCHAR,citations VARCHAR,PRIMARY KEY (idDoc)) [42101-191]
2016-09-05 20:59:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TERMS" already exists; SQL statement:
CREATE TABLE SPATIA.TERMS(idDoc INTEGER NOT NULL,term VARCHAR NOT NULL,tf INTEGER NOT NULL,tfidf DOUBLE,FOREIGN KEY(idDoc) REFERENCES DOCUMENT(idDoc) ON DELETE CASCADE,PRIMARY KEY (idDoc,term)) [42101-191]
2016-09-05 20:59:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IDF" already exists; SQL statement:
CREATE TABLE SPATIA.IDF(term VARCHAR NOT NULL,numDocs INTEGER NOT NULL,idf DOUBLE NOT NULL,PRIMARY KEY (term)) [42101-191]
2016-09-05 20:59:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Schema "SPATIA" already exists; SQL statement:
CREATE SCHEMA SPATIA [90078-191]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateSchema.update(CreateSchema.java:48)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at model.ModelDatabase.createSchema(ModelDatabase.java:70)
	at model.ModelDatabase.<init>(ModelDatabase.java:30)
	at model.ModelDatabase.instance(ModelDatabase.java:46)
	at Main.start(Main.java:22)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$162(LauncherImpl.java:863)
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$175(PlatformImpl.java:326)
	at com.sun.javafx.application.PlatformImpl.lambda$null$173(PlatformImpl.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$174(PlatformImpl.java:294)
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)
	at java.lang.Thread.run(Thread.java:745)
2016-09-05 20:59:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "DOCUMENT" already exists; SQL statement:
CREATE TABLE SPATIA.DOCUMENT(idDoc INTEGER NOT NULL,title VARCHAR NOT NULL,journal VARCHAR NOT NULL,libraryNotes VARCHAR NOT NULL,authors VARCHAR,abstractText VARCHAR,keyWords VARCHAR,classification VARCHAR,citations VARCHAR,PRIMARY KEY (idDoc)) [42101-191]
2016-09-05 20:59:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TERMS" already exists; SQL statement:
CREATE TABLE SPATIA.TERMS(idDoc INTEGER NOT NULL,term VARCHAR NOT NULL,tf INTEGER NOT NULL,tfidf DOUBLE,FOREIGN KEY(idDoc) REFERENCES DOCUMENT(idDoc) ON DELETE CASCADE,PRIMARY KEY (idDoc,term)) [42101-191]
2016-09-05 20:59:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IDF" already exists; SQL statement:
CREATE TABLE SPATIA.IDF(term VARCHAR NOT NULL,numDocs INTEGER NOT NULL,idf DOUBLE NOT NULL,PRIMARY KEY (term)) [42101-191]
2016-09-05 21:00:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Schema "SPATIA" already exists; SQL statement:
CREATE SCHEMA SPATIA [90078-191]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateSchema.update(CreateSchema.java:48)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at model.ModelDatabase.createSchema(ModelDatabase.java:70)
	at model.ModelDatabase.<init>(ModelDatabase.java:30)
	at model.ModelDatabase.instance(ModelDatabase.java:46)
	at Main.start(Main.java:22)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$162(LauncherImpl.java:863)
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$175(PlatformImpl.java:326)
	at com.sun.javafx.application.PlatformImpl.lambda$null$173(PlatformImpl.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$174(PlatformImpl.java:294)
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)
	at java.lang.Thread.run(Thread.java:745)
2016-09-05 21:00:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "DOCUMENT" already exists; SQL statement:
CREATE TABLE SPATIA.DOCUMENT(idDoc INTEGER NOT NULL,title VARCHAR NOT NULL,journal VARCHAR NOT NULL,libraryNotes VARCHAR NOT NULL,authors VARCHAR,abstractText VARCHAR,keyWords VARCHAR,classification VARCHAR,citations VARCHAR,PRIMARY KEY (idDoc)) [42101-191]
2016-09-05 21:00:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TERMS" already exists; SQL statement:
CREATE TABLE SPATIA.TERMS(idDoc INTEGER NOT NULL,term VARCHAR NOT NULL,tf INTEGER NOT NULL,tfidf DOUBLE,FOREIGN KEY(idDoc) REFERENCES DOCUMENT(idDoc) ON DELETE CASCADE,PRIMARY KEY (idDoc,term)) [42101-191]
2016-09-05 21:00:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IDF" already exists; SQL statement:
CREATE TABLE SPATIA.IDF(term VARCHAR NOT NULL,numDocs INTEGER NOT NULL,idf DOUBLE NOT NULL,PRIMARY KEY (term)) [42101-191]
2016-09-05 21:00:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Schema "SPATIA" already exists; SQL statement:
CREATE SCHEMA SPATIA [90078-191]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateSchema.update(CreateSchema.java:48)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at model.ModelDatabase.createSchema(ModelDatabase.java:70)
	at model.ModelDatabase.<init>(ModelDatabase.java:30)
	at model.ModelDatabase.instance(ModelDatabase.java:46)
	at Main.start(Main.java:22)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$162(LauncherImpl.java:863)
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$175(PlatformImpl.java:326)
	at com.sun.javafx.application.PlatformImpl.lambda$null$173(PlatformImpl.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$174(PlatformImpl.java:294)
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)
	at java.lang.Thread.run(Thread.java:745)
2016-09-05 21:00:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "DOCUMENT" already exists; SQL statement:
CREATE TABLE SPATIA.DOCUMENT(idDoc INTEGER NOT NULL,title VARCHAR NOT NULL,journal VARCHAR NOT NULL,libraryNotes VARCHAR NOT NULL,authors VARCHAR,abstractText VARCHAR,keyWords VARCHAR,classification VARCHAR,citations VARCHAR,PRIMARY KEY (idDoc)) [42101-191]
2016-09-05 21:00:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TERMS" already exists; SQL statement:
CREATE TABLE SPATIA.TERMS(idDoc INTEGER NOT NULL,term VARCHAR NOT NULL,tf INTEGER NOT NULL,tfidf DOUBLE,FOREIGN KEY(idDoc) REFERENCES DOCUMENT(idDoc) ON DELETE CASCADE,PRIMARY KEY (idDoc,term)) [42101-191]
2016-09-05 21:00:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IDF" already exists; SQL statement:
CREATE TABLE SPATIA.IDF(term VARCHAR NOT NULL,numDocs INTEGER NOT NULL,idf DOUBLE NOT NULL,PRIMARY KEY (term)) [42101-191]
