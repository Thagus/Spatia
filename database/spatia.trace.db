2016-09-05 23:45:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Schema "SPATIA" already exists; SQL statement:
CREATE SCHEMA SPATIA [90078-191]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateSchema.update(CreateSchema.java:48)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at model.ModelDatabase.createSchema(ModelDatabase.java:86)
	at model.ModelDatabase.<init>(ModelDatabase.java:32)
	at model.ModelDatabase.instance(ModelDatabase.java:56)
	at Main.start(Main.java:24)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$162(LauncherImpl.java:863)
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$175(PlatformImpl.java:326)
	at com.sun.javafx.application.PlatformImpl.lambda$null$173(PlatformImpl.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$174(PlatformImpl.java:294)
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)
	at java.lang.Thread.run(Thread.java:745)
2016-09-05 23:45:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "DOCUMENT" already exists; SQL statement:
CREATE TABLE SPATIA.DOCUMENT(idDoc INTEGER NOT NULL,title VARCHAR NOT NULL,journal VARCHAR NOT NULL,libraryNotes VARCHAR NOT NULL,authors VARCHAR,abstractText VARCHAR,keyWords VARCHAR,classification VARCHAR,citations VARCHAR,PRIMARY KEY (idDoc)) [42101-191]
2016-09-05 23:45:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TERMS" already exists; SQL statement:
CREATE TABLE SPATIA.TERMS(idDoc INTEGER NOT NULL,term VARCHAR NOT NULL,tf INTEGER NOT NULL,tfidf DOUBLE,FOREIGN KEY(idDoc) REFERENCES DOCUMENT(idDoc) ON DELETE CASCADE,PRIMARY KEY (idDoc,term)) [42101-191]
2016-09-05 23:45:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IDF" already exists; SQL statement:
CREATE TABLE SPATIA.IDF(term VARCHAR NOT NULL,numDocs INTEGER NOT NULL,idf DOUBLE NOT NULL,PRIMARY KEY (term)) [42101-191]
2016-09-05 23:47:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Schema "SPATIA" already exists; SQL statement:
CREATE SCHEMA SPATIA [90078-191]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateSchema.update(CreateSchema.java:48)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at model.ModelDatabase.createSchema(ModelDatabase.java:87)
	at model.ModelDatabase.<init>(ModelDatabase.java:42)
	at model.ModelDatabase.instance(ModelDatabase.java:57)
	at Main.start(Main.java:24)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$162(LauncherImpl.java:863)
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$175(PlatformImpl.java:326)
	at com.sun.javafx.application.PlatformImpl.lambda$null$173(PlatformImpl.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$174(PlatformImpl.java:294)
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)
	at java.lang.Thread.run(Thread.java:745)
2016-09-05 23:47:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "DOCUMENT" already exists; SQL statement:
CREATE TABLE SPATIA.DOCUMENT(idDoc INTEGER NOT NULL,title VARCHAR NOT NULL,journal VARCHAR NOT NULL,libraryNotes VARCHAR NOT NULL,authors VARCHAR,abstractText VARCHAR,keyWords VARCHAR,classification VARCHAR,citations VARCHAR,PRIMARY KEY (idDoc)) [42101-191]
2016-09-05 23:47:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TERMS" already exists; SQL statement:
CREATE TABLE SPATIA.TERMS(idDoc INTEGER NOT NULL,term VARCHAR NOT NULL,tf INTEGER NOT NULL,tfidf DOUBLE,FOREIGN KEY(idDoc) REFERENCES DOCUMENT(idDoc) ON DELETE CASCADE,PRIMARY KEY (idDoc,term)) [42101-191]
2016-09-05 23:47:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IDF" already exists; SQL statement:
CREATE TABLE SPATIA.IDF(term VARCHAR NOT NULL,numDocs INTEGER NOT NULL,idf DOUBLE NOT NULL,PRIMARY KEY (term)) [42101-191]
2016-09-05 23:49:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Schema "SPATIA" already exists; SQL statement:
CREATE SCHEMA SPATIA [90078-191]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateSchema.update(CreateSchema.java:48)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at model.ModelDatabase.createSchema(ModelDatabase.java:82)
	at model.ModelDatabase.<init>(ModelDatabase.java:41)
	at model.ModelDatabase.instance(ModelDatabase.java:52)
	at Main.start(Main.java:24)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$162(LauncherImpl.java:863)
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$175(PlatformImpl.java:326)
	at com.sun.javafx.application.PlatformImpl.lambda$null$173(PlatformImpl.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$174(PlatformImpl.java:294)
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)
	at java.lang.Thread.run(Thread.java:745)
2016-09-05 23:49:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "DOCUMENT" already exists; SQL statement:
CREATE TABLE SPATIA.DOCUMENT(idDoc INTEGER NOT NULL,title VARCHAR NOT NULL,journal VARCHAR NOT NULL,libraryNotes VARCHAR NOT NULL,authors VARCHAR,abstractText VARCHAR,keyWords VARCHAR,classification VARCHAR,citations VARCHAR,PRIMARY KEY (idDoc)) [42101-191]
2016-09-05 23:49:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TERMS" already exists; SQL statement:
CREATE TABLE SPATIA.TERMS(idDoc INTEGER NOT NULL,term VARCHAR NOT NULL,tf INTEGER NOT NULL,tfidf DOUBLE,FOREIGN KEY(idDoc) REFERENCES DOCUMENT(idDoc) ON DELETE CASCADE,PRIMARY KEY (idDoc,term)) [42101-191]
2016-09-05 23:49:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IDF" already exists; SQL statement:
CREATE TABLE SPATIA.IDF(term VARCHAR NOT NULL,numDocs INTEGER NOT NULL,idf DOUBLE NOT NULL,PRIMARY KEY (term)) [42101-191]
2016-09-06 00:03:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Schema "SPATIA" already exists; SQL statement:
CREATE SCHEMA SPATIA [90078-191]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateSchema.update(CreateSchema.java:48)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at model.ModelDatabase.createSchema(ModelDatabase.java:82)
	at model.ModelDatabase.<init>(ModelDatabase.java:32)
	at model.ModelDatabase.instance(ModelDatabase.java:52)
	at Main.start(Main.java:24)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$162(LauncherImpl.java:863)
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$175(PlatformImpl.java:326)
	at com.sun.javafx.application.PlatformImpl.lambda$null$173(PlatformImpl.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$174(PlatformImpl.java:294)
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)
	at java.lang.Thread.run(Thread.java:745)
2016-09-06 00:03:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "DOCUMENT" already exists; SQL statement:
CREATE TABLE SPATIA.DOCUMENT(idDoc INTEGER NOT NULL,title VARCHAR NOT NULL,journal VARCHAR NOT NULL,libraryNotes VARCHAR NOT NULL,authors VARCHAR,abstractText VARCHAR,keyWords VARCHAR,classification VARCHAR,citations VARCHAR,PRIMARY KEY (idDoc)) [42101-191]
2016-09-06 00:03:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TERMS" already exists; SQL statement:
CREATE TABLE SPATIA.TERMS(idDoc INTEGER NOT NULL,term VARCHAR NOT NULL,tf INTEGER NOT NULL,tfidf DOUBLE,FOREIGN KEY(idDoc) REFERENCES DOCUMENT(idDoc) ON DELETE CASCADE,PRIMARY KEY (idDoc,term)) [42101-191]
2016-09-06 00:03:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "IDF" already exists; SQL statement:
CREATE TABLE SPATIA.IDF(term VARCHAR NOT NULL,numDocs INTEGER NOT NULL,idf DOUBLE NOT NULL,PRIMARY KEY (term)) [42101-191]
